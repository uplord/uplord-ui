@use '/src/styles/forward' as *;
@use 'sass:color';

.fields {
  display: flex;
  flex-direction: column;
  gap: 1rem;
}

.field {
  display: flex;
  flex-direction: column;
  gap: 0.5rem;

  label {
    @include text-md;
    @include text-normal;

    & {
      color: $color-text;
    }
  }

  textarea {
    resize: none;
  }
}

.outer {
  display: flex;
  width: 100%;
  align-items: center;
  padding: 0.96875rem;
  border: 0.0625rem solid $color-border;
  border-radius: 0.5rem;
  background-color: transparent;
  gap: 0.5rem;
  line-height: 1.4375rem;
  outline: 0.125rem solid transparent;
  outline-offset: -0.125rem;
  transition:
    background-color 0.2s ease-in-out,
    border-color 0.2s ease-in-out,
    color 0.2s ease-in-out,
    outline 0.2s ease-in-out;

  @include dark-mode {
    border-color: $color-border-dark;
  }

  @media (hover: hover) {
    &:hover:not(.is-disabled, .is-error, &:has(.button:hover, .click:hover)) {
      background-color: $color-hover;
      cursor: text;

      @include dark-mode {
        background-color: $color-hover-dark;
      }
    }
  }

  &:focus-within:not(:has(.button:focus, .click:focus)) {
    background-color: $color-hover;
    outline-color: $color-focus;

    @include dark-mode {
      background-color: $color-hover-dark;
      outline-color: $color-focus-dark;
    }
  }

  &.is-disabled {
    background-color: $color-disabled;

    @include dark-mode {
      background-color: $color-disabled-dark;
    }

    .input + .placeholder,
    .icon,
    .text {
      color: $color-border;

      @include dark-mode {
        color: $color-border-dark;
      }
    }
  }

  &.is-loading {
    position: relative;
    background-color: transparent;

    &::after {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border-radius: 0.5rem;
      content: '';
      transition: all 0.2s ease-in-out;
    }

    .inner {
      opacity: 0;
    }

    .button,
    .text,
    .icon-wrap {
      display: none;
    }
  }

  &.is-skeleton {
    border-color: $color-skeleton;
    animation: pulse 1.5s infinite ease-in-out;
    background-color: $color-skeleton;

    @include dark-mode {
      border-color: $color-skeleton-dark;
      background-color: $color-skeleton-dark;
    }

    .inner {
      opacity: 0;
    }

    .button,
    .text,
    .icon-wrap {
      display: none;
    }
  }

  &.is-loading {
    background-color: $color-hover;

    @include dark-mode {
      background-color: $color-hover-dark;
    }
  }

  &.is-error:not(.is-disabled) {
    border-color: $color-error;
    background-color: $color-error-02;

    &:focus-within:not(:has(.button:focus, .click:focus)) {
      background-color: $color-error-02;
      outline-color: $color-error;
    }

    & + .helper {
      color: $color-error;
    }
  }

  select {
    width: calc(100% + 3.75rem);
    padding: 1rem 2.75rem 1rem 1rem;
    margin: -1rem -2.75rem -1rem -1rem;
  }
}

.inner {
  position: relative;
  flex: 1;
}

.input {
  @include text-md;
  @include text-normal;

  & {
    position: relative;
    width: 100%;
    padding: 0;
    border: 0;
    appearance: none;
    background-color: transparent;
    color: $color-dark;
    transition: all 0.2s ease-in-out;

    @include dark-mode {
      color: $color-light;
    }
  }

  &:disabled {
    color: $color-border;

    @include dark-mode {
      color: $color-border-dark;
    }
  }

  &:focus {
    outline: 0;
  }

  &:focus,
  &:not(:placeholder-shown) {
    top: 0.46875rem;

    .no-placeholder & {
      top: 0;
    }

    & + .placeholder {
      top: -0.40625rem;
      padding: 0;
      color: $color-text;
      font-size: 0.75rem;
      line-height: 0.875rem;
    }
  }

  & + .placeholder {
    @include text-md;
    @include text-normal;

    & {
      position: absolute;
      top: 0;
      left: 0;
      padding: 0;
      color: $color-text;
      pointer-events: none;
      transition: all 0.2s ease-in-out;
    }
  }
}

.icon-wrap {
  z-index: 1;
  display: flex;
  align-items: center;
}

.icon {
  color: $color-icon;
  transition: color 0.2s ease-in-out;

  @include dark-mode {
    color: $color-icon-dark;
  }
}

.text {
  @include text-md;
  @include text-normal;

  & {
    color: $color-icon;
    transition: color 0.2s ease-in-out;

    @include dark-mode {
      color: $color-icon-dark;
    }
  }
}

.button {
  margin: -0.5625rem -0.5625rem -0.5625rem 0;

  &:not(:disabled):hover {
    cursor: pointer;
  }
}

.click {
  padding: 1.125rem 0;
  margin: -1.125rem 0;
  line-height: 1.4375rem;

  @media (hover: hover) {
    &:hover {
      cursor: pointer;
    }
  }
}

.helper {
  @include text-xs;
  @include text-normal;

  & {
    color: $color-text;
    transition: color 0.2s ease-in-out;

    @include dark-mode {
      color: $color-text-dark;
    }
  }
}

.loading {
  position: absolute;
  z-index: 1;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;

  &::after {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0.5rem;
    border-radius: 50%;
    animation: loading 1s infinite;
    aspect-ratio: 1;
    content: '';
    transform: translate(-50%, -50%);

    @include dark-mode {
      animation: loading-dark 1s infinite;
    }
  }
}

$color-loading-01: color.change($color-dark, $alpha: 0.15);
$color-loading-02: color.change($color-dark, $alpha: 0.25);
$color-loading-03: color.change($color-dark, $alpha: 0.35);
$color-loading-01-dark: color.change($color-light, $alpha: 0.15);
$color-loading-02-dark: color.change($color-light, $alpha: 0.25);
$color-loading-03-dark: color.change($color-light, $alpha: 0.35);

@keyframes loading {
  0% {
    background: $color-loading-02;
    box-shadow:
      0.875rem 0 $color-loading-01,
      -0.875rem 0 $color-loading-03;
  }

  33% {
    background: $color-loading-03;
    box-shadow:
      0.875rem 0 $color-loading-02,
      -0.875rem 0 $color-loading-01;
  }

  66% {
    background: $color-loading-01;
    box-shadow:
      0.875rem 0 $color-loading-03,
      -0.875rem 0 $color-loading-02;
  }

  100% {
    background: $color-loading-02;
    box-shadow:
      0.875rem 0 $color-loading-01,
      -0.875rem 0 $color-loading-03;
  }
}

@keyframes loading-dark {
  0% {
    background: $color-loading-02-dark;
    box-shadow:
      0.875rem 0 $color-loading-01-dark,
      -0.875rem 0 $color-loading-03-dark;
  }

  33% {
    background: $color-loading-03-dark;
    box-shadow:
      0.875rem 0 $color-loading-02-dark,
      -0.875rem 0 $color-loading-01-dark;
  }

  66% {
    background: $color-loading-01-dark;
    box-shadow:
      0.875rem 0 $color-loading-03-dark,
      -0.875rem 0 $color-loading-02-dark;
  }

  100% {
    background: $color-loading-02-dark;
    box-shadow:
      0.875rem 0 $color-loading-01-dark,
      -0.875rem 0 $color-loading-03-dark;
  }
}

@keyframes pulse {
  0% {
    opacity: 0.6;
  }

  50% {
    opacity: 1;
  }

  100% {
    opacity: 0.6;
  }
}
